name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      crate:
        description: 'Crate to release (or "all" for all crates)'
        required: true
        default: 'all'

env:
  CARGO_TERM_COLOR: always

jobs:
  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      
      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v2
        
      - name: Login to crates.io
        run: cargo login ${{ secrets.CRATES_IO_TOKEN }}
        
      - name: Publish crates
        run: |
          # Order matters due to dependencies
          CRATES=(
            "crates/observability/synapsed-substrates"
            "crates/observability/synapsed-serventis"
            "crates/core/synapsed-core"
            "crates/core/synapsed-crypto"
            "crates/core/synapsed-gpu"
            "crates/storage/synapsed-storage"
            "crates/storage/synapsed-crdt"
            "crates/network/synapsed-net"
            "crates/network/synapsed-consensus"
            "crates/network/synapsed-routing"
            "crates/security/synapsed-identity"
            "crates/security/synapsed-safety"
            "crates/intent/synapsed-intent"
            "crates/intent/synapsed-promise"
            "crates/intent/synapsed-verify"
            "crates/intent/synapsed-enforce"
            "crates/compute/synapsed-wasm"
            "crates/compute/synapsed-neural-core"
            "crates/applications/synapsed-payments"
            "crates/applications/synapsed-mcp"
            "crates/applications/synapsed-cli"
          )
          
          for crate in "${CRATES[@]}"; do
            if [ -d "$crate" ]; then
              echo "Publishing $crate..."
              (cd "$crate" && cargo publish --allow-dirty) || true
              sleep 30  # Wait for crates.io to index
            fi
          done

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - uses: actions/checkout@v4
      - name: Generate changelog
        id: changelog
        run: |
          echo "# Release Notes" > RELEASE.md
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> RELEASE.md
          
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: RELEASE.md
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          generate_release_notes: true

  docker:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: publish
    strategy:
      matrix:
        target: [synapsed-core, synapsed-mcp, synapsed-cli]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile.${{ matrix.target }}
          push: true
          tags: |
            ghcr.io/synapsed-me/${{ matrix.target }}:latest
            ghcr.io/synapsed-me/${{ matrix.target }}:${{ github.ref_name }}