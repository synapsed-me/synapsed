name: Quick Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  # Essential checks that should always pass
  format:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check

  # Basic compilation check
  check:
    name: Compilation Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Check workspace structure
        run: cargo metadata --no-deps > /dev/null
      - name: Check compilation (allow failures for now)
        run: cargo check --all || true
        continue-on-error: true

  # Clippy linting (informational for now)
  clippy:
    name: Clippy (Informational)
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: Run clippy
        run: cargo clippy --all -- -W clippy::all || true

  # Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: rustsec/audit-check@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

  # Documentation check
  docs:
    name: Documentation Check
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Check documentation
        run: cargo doc --no-deps --all-features || true

  # Summary job for branch protection
  ci-success:
    name: CI Success
    if: ${{ always() }}
    needs: [format, check]
    runs-on: ubuntu-latest
    steps:
      - name: Check format status
        if: ${{ needs.format.result != 'success' }}
        run: |
          echo "Format check failed"
          exit 1
      - name: Check compilation status  
        if: ${{ needs.check.result != 'success' }}
        run: |
          echo "Compilation check failed"
          exit 1
      - name: Success
        run: echo "Essential checks passed!"