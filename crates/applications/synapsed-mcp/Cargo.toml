[package]
name = "synapsed-mcp"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
keywords = ["mcp", "ai", "intent", "verification", "claude"]
categories = ["network-programming", "development-tools"]
description = "Model Context Protocol (MCP) server for intent verification in AI agents"

[[bin]]
name = "synapsed-mcp-server"
path = "src/main.rs"

[dependencies]
# Core dependencies
synapsed-core = { workspace = true }
synapsed-intent = { workspace = true }
synapsed-promise = { workspace = true }
synapsed-verify = { workspace = true }
synapsed-swarm = { path = "../../intent/synapsed-swarm" }
synapsed-storage = { workspace = true }

# Observability dependencies
synapsed-substrates = { workspace = true }
synapsed-monitor = { workspace = true }

# Network and security dependencies
synapsed-net = { workspace = true }
synapsed-routing = { workspace = true }
synapsed-crypto = { workspace = true }
synapsed-identity = { workspace = true }
synapsed-crdt = { workspace = true }

# MCP implementation using rmcp
rmcp = { version = "0.3", features = ["server", "transport-io"] }
serde = { workspace = true }
serde_json = { workspace = true }
tokio = { workspace = true }
async-trait = { workspace = true }

# Logging
tracing = { workspace = true }
tracing-subscriber = { workspace = true }

# Error handling
thiserror = { workspace = true }
anyhow = { workspace = true }

# Data structures
uuid = { workspace = true }
chrono = { workspace = true }
bytes = "1.5"
lazy_static = "1.4"

# HTTP/TLS client support
hyper = { version = "1.5", features = ["client", "http2"] }
hyper-util = { version = "0.1", features = ["client", "http2", "tokio", "client-legacy"] }
hyper-rustls = { version = "0.27", features = ["http2"] }
rustls = { version = "0.23", features = ["std"] }
tokio-rustls = "0.26"
rustls-native-certs = "0.8"
http = "1.1"
http-body-util = "0.1"
tower = { version = "0.5", features = ["util"] }
