[package]
name = "synapsed-wasm"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
description = "WebAssembly runtime and modules for P2P secure communication platform"
keywords = ["wasm", "webassembly", "p2p", "webrtc", "crdt", "pwa"]
categories = ["wasm", "cryptography", "web-programming", "network-programming"]

[dependencies]
# Core async runtime
tokio = { workspace = true }
async-trait = { workspace = true }

# WASM runtime dependencies
wasmtime = { version = "26.0", features = ["async", "component-model", "wat", "cranelift"] }
wasmtime-wasi = "26.0"
wasmparser = "0.219"
wasm-encoder = "0.219"
wat = "1.219"

# WASM bindgen for web integration (required for P2P platform)
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
web-sys = { version = "0.3", features = [
  "console",
  "Performance", 
  "Window",
  "Document",
  "Storage",
  "MessageChannel",
  "MessagePort",
  "BroadcastChannel",
  "ServiceWorkerContainer",
  "ServiceWorkerRegistration",
  "Worker",
  "SharedWorker",
  "RtcPeerConnection",
  "RtcDataChannel",
  "RtcSessionDescription",
  "RtcIceCandidate",
  "IdbFactory",
  "IdbDatabase",
  "IdbTransaction",
  "IdbObjectStore",
  "CryptoKey",
  "SubtleCrypto"
] }
js-sys = "0.3"

# Synapsed dependencies
synapsed-crypto = { path = "../../core/synapsed-crypto", version = "0.1.0", optional = true }
synapsed-storage = { path = "../../storage/synapsed-storage", version = "0.1.0", optional = true }
synapsed-payments = { path = "../../applications/synapsed-payments", version = "0.1.0", optional = true }
synapsed-substrates = { path = "../../observability/synapsed-substrates", version = "0.1.0", optional = true }
synapsed-net = { path = "../../network/synapsed-net", version = "0.1.0", optional = true }

# Error handling
thiserror = { workspace = true }
anyhow = { workspace = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }
bincode = { workspace = true }

# Utilities
uuid = { workspace = true }
chrono = { workspace = true }
tracing = { workspace = true }
parking_lot = { workspace = true }
once_cell = { workspace = true }

# Memory management
bytes = "1.8"
zeroize = { version = "1.8", features = ["derive"] }

# Cryptographic utilities for P2P
sha2 = "0.10"
sha3 = "0.10"
rand = "0.8"
argon2 = "0.5"
aes-gcm = "0.10"
elliptic-curve = "0.13"
p256 = "0.13"
p384 = "0.13"
ed25519-dalek = "2.1"
x25519-dalek = "2.0"
hkdf = "0.12"
getrandom = { version = "0.2", features = ["js"] }

# Concurrency
futures = "0.3"
pin-project = "1.1"

# Configuration
config = "0.14"
toml = "0.8"

# P2P and CRDT dependencies
# yjs = { version = "0.18", optional = true } # Not available
# ywasm = { version = "0.18", optional = true } # Not available
# rsync = { version = "0.1", optional = true } # Using 0.1 as 2.1 not available
libp2p-core = { version = "0.41", optional = true }
libp2p-noise = { version = "0.44", optional = true }
libp2p-yamux = { version = "0.45", optional = true }

# DID and identity
# did_method_key = { version = "0.2", optional = true } # Not available
# did_resolver = { version = "0.1", optional = true } # Not available
bip39 = { version = "2.0", optional = true }
bip32 = { version = "0.5", optional = true }

# Zero-knowledge proofs
ark-bn254 = { version = "0.4", optional = true }
ark-groth16 = { version = "0.4", optional = true }
ark-serialize = { version = "0.4", optional = true }
# ark-circom = { version = "0.1", optional = true } # Not available

[dev-dependencies]
tokio-test = "0.4"
proptest = { workspace = true }
criterion = { workspace = true }
tempfile = "3.13"
pretty_assertions = "1.4"
test-case = "3.3"
mockall = "0.13"

[features]
default = ["std", "runtime"]

# Core features
std = []
runtime = []
modules = []

# WASM compilation targets
web = []
pwa = ["web", "service-worker", "indexed-db"]
wasi = []
wasmer = []  # Future wasmer runtime support

# P2P Module categories
crypto-modules = ["dep:synapsed-crypto"]
storage-modules = ["dep:synapsed-storage"] 
network-modules = ["dep:synapsed-net"]
webrtc-modules = ["libp2p-core", "libp2p-noise", "libp2p-yamux"]
crdt-modules = [] # yjs and ywasm not available
sync-modules = [] # rsync not available with required version
did-modules = ["bip39", "bip32"] # did_method_key and did_resolver not available
zkp-modules = ["ark-bn254", "ark-groth16", "ark-serialize"] # ark-circom not available
service-worker = []
indexed-db = []

# Integration features
full = ["crypto-modules", "storage-modules", "network-modules", "webrtc-modules", "crdt-modules", "sync-modules", "did-modules", "zkp-modules"]
p2p-core = ["webrtc-modules", "crdt-modules", "crypto-modules"]
p2p-advanced = ["p2p-core", "zkp-modules", "did-modules", "sync-modules"]
browser-pwa = ["pwa", "service-worker", "indexed-db", "p2p-core"]

# Performance and optimization for browsers
simd = []
parallel = []
wasm-opt = []
browser-perf = ["simd", "wasm-opt"]
optimization = ["simd", "parallel", "browser-perf"]

# Security features
secure-execution = []
sandboxing = []
security = ["secure-execution", "sandboxing"]

# Development features
testing = []
benchmarks = []
dev = ["testing", "benchmarks"]

[[bench]]
name = "wasm_runtime_benchmarks"
harness = false

[[bench]]
name = "module_execution_benchmarks" 
harness = false

[[example]]
name = "basic_runtime"

# Examples will be added later

# Profiles are managed at workspace level