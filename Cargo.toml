[workspace]
resolver = "2"
members = [
    # Observability Foundation
    "crates/observability/synapsed-substrates",
    "crates/observability/synapsed-serventis",
    
    # Core Infrastructure
    "crates/core/synapsed-core",
    "crates/core/synapsed-crypto",
    "crates/core/synapsed-gpu",
    
    # Storage & Data
    "crates/storage/synapsed-storage",
    "crates/storage/synapsed-crdt",
    
    # Networking
    "crates/network/synapsed-net",
    "crates/network/synapsed-consensus",
    "crates/network/synapsed-routing",
    
    # Security & Identity
    "crates/security/synapsed-identity",
    "crates/security/synapsed-safety",
    
    # Intent Framework (from IntentProof)
    "crates/intent/synapsed-intent",
    # "crates/intent/synapsed-promise",  # TODO: Create from IntentProof
    # "crates/intent/synapsed-verify",   # TODO: Create from IntentProof
    # "crates/intent/synapsed-enforce",  # TODO: Create from IntentProof
    
    # Compute & Runtime
    "crates/compute/synapsed-wasm",
    "crates/compute/synapsed-neural-core",
    
    # Applications
    "crates/applications/synapsed-payments",
    # "crates/applications/synapsed-mcp",  # TODO: Create
    # "crates/applications/synapsed-cli",  # TODO: Create
    
    # Testing
    "tests",
    "benches"
]

[workspace.package]
version = "0.1.0"
edition = "2021"
authors = ["Synapsed Contributors <team@synapsed.me>"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/synapsed-me/synapsed"
homepage = "https://synapsed.me"
keywords = ["observability", "distributed", "intent", "verification", "promise-theory"]
categories = ["asynchronous", "network-programming", "cryptography"]

[workspace.dependencies]
# Internal crates
synapsed-substrates = { path = "crates/observability/synapsed-substrates", version = "0.1.0" }
synapsed-serventis = { path = "crates/observability/synapsed-serventis", version = "0.1.0" }
synapsed-core = { path = "crates/core/synapsed-core", version = "0.1.0" }
synapsed-crypto = { path = "crates/core/synapsed-crypto", version = "0.1.0" }
synapsed-gpu = { path = "crates/core/synapsed-gpu", version = "0.1.0" }
synapsed-storage = { path = "crates/storage/synapsed-storage", version = "0.1.0" }
synapsed-crdt = { path = "crates/storage/synapsed-crdt", version = "0.1.0" }
synapsed-net = { path = "crates/network/synapsed-net", version = "0.1.0" }
synapsed-consensus = { path = "crates/network/synapsed-consensus", version = "0.1.0" }
synapsed-routing = { path = "crates/network/synapsed-routing", version = "0.1.0" }
synapsed-identity = { path = "crates/security/synapsed-identity", version = "0.1.0" }
synapsed-safety = { path = "crates/security/synapsed-safety", version = "0.1.0" }
synapsed-intent = { path = "crates/intent/synapsed-intent", version = "0.1.0" }
# synapsed-promise = { path = "crates/intent/synapsed-promise", version = "0.1.0" }
# synapsed-verify = { path = "crates/intent/synapsed-verify", version = "0.1.0" }
# synapsed-enforce = { path = "crates/intent/synapsed-enforce", version = "0.1.0" }
synapsed-wasm = { path = "crates/compute/synapsed-wasm", version = "0.1.0" }
synapsed-neural-core = { path = "crates/compute/synapsed-neural-core", version = "0.1.0" }
synapsed-payments = { path = "crates/applications/synapsed-payments", version = "0.1.0" }

# Async runtime
tokio = { version = "1.41", features = ["full"] }
async-trait = "0.1"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Observability
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
metrics = "0.23"
metrics-exporter-prometheus = "0.15"
opentelemetry = "0.27"
opentelemetry-otlp = "0.27"

# Cryptography
sha3 = "0.10"
rand_core = "0.6"
zeroize = { version = "1.8", features = ["derive"] }
subtle = "2.6"
getrandom = "0.2"
ed25519-dalek = "2.1"
x25519-dalek = "2.0"
rand = "0.8"
ring = "0.17"
aes-gcm = "0.10"
chacha20poly1305 = "0.10"

# Network and protocols
tungstenite = "0.24"
quinn = "0.11"
libp2p = { version = "0.54", features = ["tokio", "noise", "tcp", "websocket", "identify", "kad", "gossipsub"] }
webrtc = "0.12"

# Storage and databases
parking_lot = "0.12"
uuid = { version = "1.11", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
rusqlite = { version = "0.32", features = ["bundled", "chrono", "serde_json"] }
rocksdb = "0.22"

# WASM runtime
wasmtime = { version = "26.0", features = ["async", "component-model", "wat", "cranelift"] }
wasmtime-wasi = "26.0"
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4"
web-sys = "0.3"
js-sys = "0.3"
reqwest = { version = "0.12", default-features = false, features = ["json", "rustls-tls"] }
serde-wasm-bindgen = "0.6"
console_error_panic_hook = "0.1"

# Testing
tokio-test = "0.4"
proptest = "1.6"
mockall = "0.13"
criterion = { version = "0.5", features = ["html_reports"] }
quickcheck = "1.0"
arbitrary = { version = "1.4", features = ["derive"] }

# Additional common dependencies
once_cell = "1.21"
lazy_static = "1.5"
base64 = "0.22"
hex = "0.4"
config = "0.14"
toml = "0.8"
serde_yaml = "0.9"
dashmap = "6.1"
petgraph = "0.6"
regex = "1.11"
which = "7.0"

# GPU support (these are used by synapsed-gpu crate)
# cuda-sys = "0.2"  # Uncomment if CUDA development is needed
# opencl3 = "0.9"   # Uncomment if OpenCL development is needed

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
strip = true
panic = "abort"

[profile.release-with-debug]
inherits = "release"
strip = false
debug = true

[profile.bench]
inherits = "release"

[profile.dev]
opt-level = 0
debug = true

[profile.test]
opt-level = 2
debug = true

[patch.crates-io]
# Add any patches here if needed